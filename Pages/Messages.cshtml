@page
@model SaillingLoc.Pages.MessagesModel
@{
    ViewData["Title"] = "Messages";
}

<style>
    body {
        background-color: #f5f5f5;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
        margin: 0;
        padding: 0;
    }

    .messaging-container {
        display: flex;
        height: calc(100vh - 100px);
        max-width: 1400px;
        margin: 20px auto;
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    /* LEFT SIDEBAR - Conversations List */
    .conversations-sidebar {
        width: 350px;
        background-color: #fafafa;
        border-right: 1px solid #e0e0e0;
        display: flex;
        flex-direction: column;
    }

    .conversations-header {
        padding: 20px;
        background-color: white;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .conversations-header h3 {
        margin: 0;
        font-size: 20px;
        font-weight: 600;
        color: #202124;
    }

    .btn-new-message {
        background-color: #AD7C59;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        font-size: 13px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 6px;
        transition: background-color 0.2s;
    }

    .btn-new-message:hover {
        background-color: #c1926b;
    }

    /* Modal Styles */
    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        align-items: center;
        justify-content: center;
    }

    .modal-overlay.show {
        display: flex;
    }

    .modal-content {
        background-color: white;
        border-radius: 12px;
        padding: 0;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.15);
    }

    .modal-header {
        padding: 20px 24px;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-header h4 {
        margin: 0;
        font-size: 18px;
        font-weight: 600;
        color: #202124;
    }

    .modal-close {
        background: none;
        border: none;
        font-size: 24px;
        color: #5f6368;
        cursor: pointer;
        padding: 0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .modal-close:hover {
        background-color: #f1f3f4;
    }

    .modal-body {
        padding: 24px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        font-size: 14px;
        font-weight: 500;
        color: #202124;
        margin-bottom: 8px;
    }

    .form-select {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid #dadce0;
        border-radius: 6px;
        font-size: 14px;
        color: #202124;
        background-color: white;
        cursor: pointer;
    }

    .form-select:focus {
        outline: none;
        border-color: #AD7C59;
    }

    .form-textarea {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid #dadce0;
        border-radius: 6px;
        font-size: 14px;
        color: #202124;
        resize: vertical;
        min-height: 100px;
        font-family: inherit;
    }

    .form-textarea:focus {
        outline: none;
        border-color: #AD7C59;
    }

    .modal-footer {
        padding: 16px 24px;
        border-top: 1px solid #e0e0e0;
        display: flex;
        justify-content: flex-end;
        gap: 12px;
    }

    .btn-cancel {
        background-color: white;
        border: 1px solid #dadce0;
        color: #5f6368;
        padding: 8px 20px;
        border-radius: 6px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .btn-cancel:hover {
        background-color: #f8f9fa;
    }

    .btn-send {
        background-color: #AD7C59;
        color: white;
        border: none;
        padding: 8px 20px;
        border-radius: 6px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .btn-send:hover {
        background-color: #c1926b;
    }

    .conversations-list {
        flex: 1;
        overflow-y: auto;
    }

    .conversation-item {
        padding: 16px 20px;
        border-bottom: 1px solid #e0e0e0;
        cursor: pointer;
        transition: background-color 0.2s;
        position: relative;
    }

    .conversation-item:hover {
        background-color: #f1f3f4;
    }

    .conversation-item.active {
        background-color: #e3f2fd;
        border-left: 4px solid #1976d2;
    }

    .conversation-title {
        font-weight: 600;
        color: #202124;
        margin-bottom: 4px;
        font-size: 15px;
    }

    .conversation-subtitle {
        font-size: 13px;
        color: #5f6368;
    }

    .unread-badge {
        position: absolute;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
        background-color: #ea4335;
        color: white;
        border-radius: 12px;
        padding: 2px 8px;
        font-size: 12px;
        font-weight: 600;
    }

    /* RIGHT SIDE - Chat Area */
    .chat-area {
        flex: 1;
        display: flex;
        flex-direction: column;
        background-color: white;
    }

    .chat-header {
        padding: 20px 30px;
        background-color: white;
        border-bottom: 1px solid #e0e0e0;
    }

    .chat-header h4 {
        margin: 0 0 4px 0;
        font-size: 18px;
        font-weight: 600;
        color: #202124;
    }

    .chat-header p {
        margin: 0;
        font-size: 13px;
        color: #5f6368;
    }

    .chat-messages {
        flex: 1;
        overflow-y: auto;
        padding: 30px;
        background-color: #fafafa;
    }

    .message-wrapper {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
    }

    .message-wrapper.sent {
        align-items: flex-end;
    }

    .message-wrapper.received {
        align-items: flex-start;
    }

    .message-bubble {
        max-width: 60%;
        padding: 12px 16px;
        border-radius: 12px;
        font-size: 14px;
        line-height: 1.5;
        word-wrap: break-word;
    }

    .message-bubble.sent {
        background-color: #AD7C59;
        color: white;
        border-bottom-right-radius: 4px;
    }

    .message-bubble.received {
        background-color: #e8eaed;
        color: #202124;
        border-bottom-left-radius: 4px;
    }

    .message-time {
        font-size: 11px;
        color: #5f6368;
        margin-top: 4px;
        padding: 0 4px;
    }

    /* Input Area */
    .chat-input-area {
        padding: 20px 30px;
        background-color: white;
        border-top: 1px solid #e0e0e0;
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .chat-input {
        flex: 1;
        padding: 12px 16px;
        border: 1px solid #dadce0;
        border-radius: 24px;
        font-size: 14px;
        outline: none;
        transition: border-color 0.2s;
    }

    .chat-input:focus {
        border-color: #AD7C59;
    }

    .send-button {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background-color: #AD7C59;
        color: white;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        transition: background-color 0.2s;
    }

    .send-button:hover {
        background-color: #c1926b;
    }

    .send-button:disabled {
        background-color: #dadce0;
        cursor: not-allowed;
    }

    /* Empty State */
    .empty-chat {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        color: #5f6368;
    }

    .empty-chat-icon {
        font-size: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    .empty-chat-text {
        font-size: 16px;
    }

    /* Scrollbar Styling */
    .conversations-list::-webkit-scrollbar,
    .chat-messages::-webkit-scrollbar {
        width: 6px;
    }

    .conversations-list::-webkit-scrollbar-track,
    .chat-messages::-webkit-scrollbar-track {
        background: transparent;
    }

    .conversations-list::-webkit-scrollbar-thumb,
    .chat-messages::-webkit-scrollbar-thumb {
        background: #dadce0;
        border-radius: 3px;
    }

    .conversations-list::-webkit-scrollbar-thumb:hover,
    .chat-messages::-webkit-scrollbar-thumb:hover {
        background: #bdc1c6;
    }

   
</style>

<div class="messaging-container">
    <!-- LEFT SIDEBAR: Conversations List -->
    <div class="conversations-sidebar">
        <div class="conversations-header">
            <h3>Conversations</h3>
            <button type="button" class="btn-new-message" onclick="openNewMessageModal()">
                ✉️ Nouveau
            </button>
        </div>
        <div class="conversations-list">
            @if (Model.Conversations != null && Model.Conversations.Any())
            {
                @foreach (var conversation in Model.Conversations)
                {
                    <div class="conversation-item @(Model.SelectedConversationId == conversation.ConversationId ? "active" : "")"
                         onclick="location.href='@Url.Page("/Messages", new { conversationId = conversation.ConversationId })'">
                        <div class="conversation-title">@conversation.ConversationTitle</div>
                        <div class="conversation-subtitle">@conversation.OtherUserName</div>
                        @if (conversation.UnreadCount > 0)
                        {
                            <span class="unread-badge">@conversation.UnreadCount</span>
                        }
                    </div>
                }
            }
            else
            {
                <div style="padding: 20px; text-align: center; color: #5f6368;">
                    Aucune conversation
                </div>
            }
        </div>
    </div>

    <!-- RIGHT SIDE: Chat Area -->
    <div class="chat-area">
        @if (!string.IsNullOrEmpty(Model.SelectedConversationId))
        {
            <!-- Chat Header -->
            <div class="chat-header">
                <h4>@Model.CurrentConversationTitle</h4>
                <p>@Model.CurrentConversationSubtitle</p>
            </div>

            <!-- Messages -->
            <div class="chat-messages" id="chatMessages">
                @if (Model.CurrentMessages != null && Model.CurrentMessages.Any())
                {
                    @foreach (var message in Model.CurrentMessages)
                    {
                        var isSent = message.SenderId == Model.CurrentUserId;
                        <div class="message-wrapper @(isSent ? "sent" : "received")">
                            <div class="message-bubble @(isSent ? "sent" : "received")">
                                @message.Content
                            </div>
                            <div class="message-time">
                                @message.SentAt.ToString("HH:mm")
                            </div>
                        </div>
                    }
                }
            </div>

            <!-- Input Area -->
            <form method="post" class="chat-input-area">
                <input type="hidden" name="ConversationId" value="@Model.SelectedConversationId" />
                <input type="hidden" name="ReceiverId" value="@Model.CurrentReceiverId" />
                <input type="text" 
                       name="MessageContent" 
                       class="chat-input" 
                       placeholder="Écrire un message..."
                       required 
                       autocomplete="off" />
                <button type="submit" class="send-button">
                    ➤
                </button>
            </form>
        }
        else
        {
            <!-- Empty State -->
            <div class="empty-chat">
                <div class="empty-chat-icon">💬</div>
                <div class="empty-chat-text">Sélectionnez une conversation pour commencer</div>
            </div>
        }
    </div>
</div>

<!-- Modal for New Message -->
<div class="modal-overlay" id="newMessageModal">
    <div class="modal-content">
        <div class="modal-header">
            <h4>Nouveau message</h4>
            <button type="button" class="modal-close" onclick="closeNewMessageModal()">×</button>
        </div>
        <form method="post" asp-page-handler="NewMessage">
            <div class="modal-body">
                <div class="form-group">
                    <label class="form-label" for="newReceiverId">Destinataire</label>
                    <select name="ReceiverId" id="newReceiverId" class="form-select" required>
                        <option value="">Sélectionnez un utilisateur</option>
                        @if (Model.AllUsers != null)
                        {
                            @foreach (var user in Model.AllUsers)
                            {
                                <option value="@user.Id">@user.FullName (@user.Email)</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label" for="newMessageContent">Message</label>
                    <textarea name="MessageContent" id="newMessageContent" class="form-textarea" placeholder="Écrivez votre message..." required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-cancel" onclick="closeNewMessageModal()">Annuler</button>
                <button type="submit" class="btn-send">Envoyer</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Auto-scroll to bottom of messages
    document.addEventListener('DOMContentLoaded', function() {
        const chatMessages = document.getElementById('chatMessages');
        if (chatMessages) {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }
    });

    function openNewMessageModal() {
        document.getElementById('newMessageModal').classList.add('show');
    }

    function closeNewMessageModal() {
        document.getElementById('newMessageModal').classList.remove('show');
    }

    // Close modal when clicking outside
    document.getElementById('newMessageModal')?.addEventListener('click', function(e) {
        if (e.target === this) {
            closeNewMessageModal();
        }
    });
</script>